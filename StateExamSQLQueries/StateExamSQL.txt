--State exam 2020.09.15
--A)

SELECT DISTINCT s.NAME, s.ADDRESS FROM STUDIO s
JOIN MOVIE m ON m.STUDIONAME = s.NAME
JOIN MOVIE m2 ON m.STUDIONAME = s.NAME
WHERE m.INCOLOR = 'N' AND m2.INCOLOR = 'Y'
ORDER BY ADDRESS ASC

--B)

SELECT s.NAME, s.ADDRESS, ISNULL(AVG(LENGTH), 0) as AVGMovieLenght FROM STUDIO s
LEFT JOIN MOVIE m ON m.STUDIONAME = s.NAME
GROUP BY s.NAME, s.ADDRESS
HAVING COUNT(m.TITLE) <= 3

--State Exam 2020.08.05

--A)
SELECT DISTINCT ms.NAME, ms.BIRTHDATE FROM MOVIESTAR ms
JOIN STARSIN si ON ms.NAME = si.STARNAME
JOIN MOVIE m ON m.TITLE = si.MOVIETITLE AND m.YEAR  = si.MOVIEYEAR AND m.INCOLOR = 'Y'
WHERE ms.NAME NOT LIKE '%Jr.%'
ORDER BY ms.BIRTHDATE DESC, ms.NAME ASC

--B)
SELECT ms.NAME, YEAR(ms.BIRTHDATE) as AGE, COUNT(DISTINCT m.STUDIONAME) as numOfStudios FROM MOVIESTAR ms
LEFT JOIN STARSIN si ON ms.NAME = si.STARNAME
LEFT JOIN MOVIE m ON m.TITLE = si.MOVIETITLE AND m.YEAR = si.MOVIEYEAR
WHERE ms.GENDER = 'F'
GROUP BY ms.NAME, ms.BIRTHDATE
HAVING COUNT(m.TITLE) <= 6

--STATE EXAM 2019.09.10

--1)
--Answer on the sheet was:
SELECT ME.NAME, M.YEAR, COUNT(*) AS CNT
FROM MOVIEEXEC ME
JOIN MOVIE M
ON ME.CERT# = M.PRODUCERC#
GROUP BY ME.CERT#, ME.NAME, M.YEAR;

--My implementation:
SELECT me.NAME, m.YEAR AS YEAR,COUNT(*) as NumMovies FROM MOVIEEXEC me
JOIN MOVIE m ON me.CERT# = m.PRODUCERC#
GROUP BY me.CERT#, m.YEAR, me.NAME

--2)

SELECT ms.NAME FROM MOVIESTAR ms
WHERE ms.BIRTHDATE = (SELECT MAX(BIRTHDATE) FROM MOVIESTAR)

--2019.07.09
--ANSWER ON SHEET WAS:
SELECT S.NAME, COUNT(M.TITLE) as CNT 
FROM STUDIO S JOIN MOVIE M 
ON S.NAME = M.STUDIONAME 
GROUP BY S.NAME 
HAVING COUNT(M.TITLE) < 2;

SELECT s.NAME, COUNT(m.TITLE) as Movies FROM STUDIO s
JOIN MOVIE m ON s.NAME = m.STUDIONAME
GROUP BY s.PRESC#, s.NAME
HAVING COUNT(m.TITLE)<2

--2)

SELECT ms.NAME FROM MOVIEEXEC ms
WHERE ms.NETWORTH = (SELECT MIN(NETWORTH) FROM MOVIEEXEC) 


--STATE EXAM 2018.09.10

--1)

SELECT s.CLASS, YEAR(MIN(b.DATE)) as minYear, YEAR(MAX(b.DATE))  as maxYear, COUNT(DISTINCT b.NAME) as battles FROM SHIPS s
LEFT JOIN OUTCOMES o ON s.NAME = o.SHIP
LEFT JOIN BATTLES b ON b.NAME = o.BATTLE
--LEFT JOIN CLASSES c ON s.CLASS = c.CLASS --Do we really need this join?
WHERE s.CLASS LIKE 'N%'
GROUP BY s.CLASS

--2)


SELECT bbShips.BATTLE, bbShips.ships FROM 

(SELECT o.BATTLE, COUNT(*) AS ships FROM CLASSES c
				JOIN SHIPS s ON c.CLASS = s.CLASS
				JOIN OUTCOMES o ON o.SHIP = s.NAME
				WHERE c.TYPE ='bb'
				GROUP BY o.BATTLE) as bbShips
JOIN (SELECT o.BATTLE, COUNT(*) AS ships FROM CLASSES c
				JOIN SHIPS s ON c.CLASS = s.CLASS
				JOIN OUTCOMES o ON o.SHIP = s.NAME
				WHERE c.TYPE ='bc'
				GROUP BY o.BATTLE) as bcShips ON bbShips.BATTLE = bcShips.BATTLE AND bbShips.ships > bcShips.ships



--STATE EXAM 2018.07.13

--1)

SELECT s.NAME, MIN(m.YEAR) as minYear ,MAX(m.YEAR) as maxYear, COUNT(m.title) as numMovies  FROM STUDIO s
JOIN MOVIE m ON s.NAME = m.STUDIONAME
WHERE s.NAME LIKE 'M%'
GROUP BY s.PRESC#, s.NAME

--2)


SELECT * FROM
(SELECT si.STARNAME, COUNT(m.TITLE) as numMovies FROM STARSIN si
JOIN MOVIE m ON si.MOVIETITLE = m.TITLE AND si.MOVIEYEAR = m.YEAR
JOIN MOVIESTAR ms ON si.STARNAME = ms.NAME
WHERE ms.GENDER = 'F'
GROUP By si.STARNAME) as res
WHERE res.numMovies >= ALL(SELECT COUNT(m.TITLE) as numMovies FROM STARSIN si
							JOIN MOVIE m ON si.MOVIETITLE = m.TITLE AND si.MOVIEYEAR = m.YEAR
							JOIN MOVIESTAR ms ON si.STARNAME = ms.NAME
							WHERE ms.GENDER = 'F'
							GROUP By si.STARNAME)





--STATE EXAM 2017.09.09

--1)

SELECT DISTINCT s.NAME, C.COUNTRY FROM CLASSES c
LEFT JOIN SHIPS s ON c.CLASS = s.CLASS
LEFT JOIN OUTCOMES o ON o.SHIP = s.NAME
WHERE s.NAME NOT IN (SELECT DISTINCT s.NAME FROM CLASSES c
					 LEFT JOIN SHIPS s ON c.CLASS = s.CLASS
                     LEFT JOIN OUTCOMES o ON o.SHIP = s.NAME
					 WHERE o.RESULT = 'sunk')

--2)

SELECT s.NAME, c.DISPLACEMENT, c.NUMGUNS FROM CLASSES c
JOIN SHIPS s ON C.CLASS = s.CLASS
WHERE c.DISPLACEMENT <= (SELECT MIN(DISPLACEMENT) FROM CLASSES) AND c.NUMGUNS >= ALL(

SELECT c.NUMGUNS FROM CLASSES c
JOIN SHIPS s ON C.CLASS = s.CLASS
WHERE c.DISPLACEMENT <= (SELECT MIN(DISPLACEMENT) FROM CLASSES)
)

--STATE EXAM 2017.09.09

--1)

SELECT DISTINCT s.NAME, C.COUNTRY FROM CLASSES c
LEFT JOIN SHIPS s ON c.CLASS = s.CLASS
LEFT JOIN OUTCOMES o ON o.SHIP = s.NAME
WHERE s.NAME NOT IN (SELECT DISTINCT s.NAME FROM CLASSES c
					 LEFT JOIN SHIPS s ON c.CLASS = s.CLASS
                     LEFT JOIN OUTCOMES o ON o.SHIP = s.NAME
					 WHERE o.RESULT = 'sunk')

--2)

SELECT s.NAME, c.DISPLACEMENT, c.NUMGUNS FROM CLASSES c
JOIN SHIPS s ON C.CLASS = s.CLASS
WHERE c.DISPLACEMENT <= (SELECT MIN(DISPLACEMENT) FROM CLASSES) AND c.NUMGUNS >= ALL(

SELECT c.NUMGUNS FROM CLASSES c
JOIN SHIPS s ON C.CLASS = s.CLASS
WHERE c.DISPLACEMENT <= (SELECT MIN(DISPLACEMENT) FROM CLASSES)
)

SELECT * FROM OUTCOMES


--State exam 2010.07.15
--1)
SELECT DISTINCT c.COUNTRY from CLASSES c
JOIN CLASSES c2 ON c.COUNTRY = c2.COUNTRY AND c.CLASS != c2.CLASS
WHERE c.NUMGUNS <9 and c2.NUMGUNS > 12

-- Answer on the sheet was this one:

SELECT DISTINCT C1.COUNTRY 
FROM CLASSES C1 
JOIN CLASSES C2 ON C1.COUNTRY=C2.COUNTRY 
WHERE C1.NUMGUNS<9 AND C2.NUMGUNS>12

--2)

SELECT c.COUNTRY, COUNT(o.BATTLE) as NumberOfBattles FROM SHIPS s
LEFT JOIN CLASSES c ON s.CLASS = c.CLASS
LEFT JOIN OUTCOMES o ON o.SHIP = s.NAME
GROUP BY c.COUNTRY
HAVING COUNT(DISTINCT O.BATTLE) < 4


--Answer on the sheet was 

SELECT COUNTRY, COUNT(O.BATTLE) AS NUM_BATTLES 
FROM CLASSES C 
LEFT JOIN SHIPS S ON C.CLASS=S.CLASS 
LEFT JOIN OUTCOMES O ON S.NAME=O.SHIP 
GROUP BY COUNTRY 
HAVING COUNT(O.BATTLE)<4;



